从Uboot官方移植适合x210(九鼎科技)开发板的uboot程序
一、先寻找与s5pv210比较相像的cpu作为移植对象
(1)从include/configs目录中适合的cpu，其中s5p_goni是比较合适的移植对象
(2)在Makefile中添加我们用到的交叉编译工具链
CROSS_COMPILE = /usr/local/arm/arm-2009q3/bin/arm-none-linux-gnueabi-

二、下载烧录镜像
(1)uboot的烧录方式有两种，第一种在windows下，用专用的烧录工具进行烧录(如九鼎科技的x210_fusing_tools.exe)，优点是操作简单，缺点是出了问题难以查找，第二种在linux下，用烧录脚本sd_fusing.sh(本质是用dd命令进行烧录)烧录uboot镜像，相比较之下，选择烧录脚本进行烧录更好。
(2)官方uboot中没有烧录脚本，因此需要从Samsung的uboot中进行移植烧录脚本，拷贝sd_fusing文件夹到官方uboot目录下，并将官方的uboot烧录到SD卡中进行启动，发现启动过程中SD卡校验失败了两次，说明我们烧录的uboot镜像的校验有问题。
(3)首先检查移植的烧录脚本，发现并没有问题，说明烧录方式是正确的。
(4)然后检查烧录的镜像，与能够成功启动的uboot的镜像文件比对后发现官方的uboot镜像少了16byte的预留空间，修改官方uboot的start.S，添加16byte的预留空间，重新编译烧录运行发现SD卡的校验通过，至此，解决了官方uboot的烧录问题，从而可以继续uboot的移植。

三、start.S的移植
(1)添加开发板电源置锁代码和串口打印'O'代码在lowlevel_init.S中发现没有运行，检查发现从start.S跳转到lowlevel_init的过程出错，研究发现lowlevel_init的代码没有被编译链接时放在前8K代码中，从而导致跳转失败。解决办法是在uboot.lds中将lowlevel_init放在前面，并且修改lowlevel_init.S中的Makefile中的依赖，防止lowlevel_init被链接两次使编译出错。

四、DDR的初始化










遇到的问题：
1.程序运行不正常，添加打印信息语句时偶尔可以运行，偶尔无法运行，检查发现是清bss段的时候，bss段结束地址写错了，导致bss段没有全部清零。
结论：程序的不正常现象，有很大的可能性是内存问题。

